openapi: 3.0.1
info:
  title: Stupro 2019 Querimonia API
  description: >
    Querimonia ist eine Plattform zum automatischen Beschwerdemanagement. Über die hier
    beschriebene API kann mit dem Backend kommuniziert werden. Dies beinhaltet Upload von
    neuen Beschwerden, Abrufen der gespeicherten Beschwerden, Anfragen von Antworttexten, etc.
  version: 0.9.1
servers:
  - url: https://beschwerdemanagement.iao.fraunhofer.de/dev
  - url: https://beschwerdemanagement.iao.fraunhofer.de
  - url: https://querimonia.iao.fraunhofer.de/dev
  - url: https://querimonia.iao.fraunhofer.de
  - url: http://localhost:8080
tags:
  - name: complaints
    description: Hier können Beschwerden hochgeladen, verwaltet und editiert werden.
  - name: entities
    description: Hier können die Named Entities einer Beschwerde bearbeitet werden.
  - name: combinations
    description: Hier können Kombinationen von Entitäten verwaltet werden.
  - name: responses
    description: Hier können Antworten abgerufen werden.
  - name: components
    description: Hier können Textbausteine für Antworten verwaltet werden.
  - name: config
    description: Hier werden Einstellungen verwaltet, es können Extraktoren, Klassifizierer und Sentiment-Analysierer festgelegt werden.
  - name: stats
    description: Hier können verschiedene Statistiken über die Beschwerden abgerufen werden.
  - name: demo
    description: Mit diesen Endpunkten kann die Datenbank mit Beispielen gefüllt werden.
paths:
  /api/complaints:
    get:
      tags:
        - complaints
      summary: Gibt Beschwerden zurück, die auf dem Server gespeichert sind.
      description: >
        Gibt Beschwerden zurück, die in der Datenbank gespeichert wurden. Es können über die
        Parameter Filter angewandt werden, die Sortierung angegeben werden und die Anzahl und die
        Seite der Beschwerden bestimmt werden.
      parameters:
        - $ref: '#/components/parameters/CountParameter'
        - $ref: '#/components/parameters/PageParameter'
        - $ref: '#/components/parameters/ComplaintsSortParameter'
        - $ref: '#/components/parameters/ComplaintStateParameter'
        - $ref: '#/components/parameters/DateMinParameter'
        - $ref: '#/components/parameters/DateMaxParameter'
        - $ref: '#/components/parameters/EmotionParameter'
        - $ref: '#/components/parameters/SubjectParameter'
        - $ref: '#/components/parameters/KeywordsParameter'

      operationId: getComplaints
      responses:
        200:
          description: Erfolgreiche Anfrage. Die Beschwerden werden entsprechend den Paramtern zurückgegeben.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Complaint'
                example:
                  - id: 583
                    preview: In Ihrem Schreiben vom 8. 2. 2013 schreiben Sie, nur "ein" Bus der Linie
                      CE62 von Wuppertal-Elberfeld nach Wuppertal-Ronsdorf sei ausgefallen. Dies kann
                      so nicht stimmen. Vielmehr stellt sich mir und anderen die Frage, weshalb ständig
                      und gehäuft Bus
                    state: NEW
                    configuration:
                      id: 94
                      name: Kein Sentiment
                      extractors:
                        - name: 'Linien Extraktor'
                          type: KIKUKO_TOOL
                          label: Linie
                          color: '#aff4fa'
                        - name: '[Extern] Geldbetrag'
                          type: KIKUKO_TOOL
                          label: Geldbetrag
                          color: '#f5ff8a'
                        - name: 'Vorgangsnummer'
                          type: KIKUKO_TOOL
                          label: Vorgangsnummer
                          color: '#ffaeae'
                        - name: '[Extern] Datum Extraktor'
                          type: KIKUKO_TOOL
                          label: Datum
                          color: '#c7c7c7'
                        - name: '[Extern] Personen Extraktor'
                          type: KIKUKO_TOOL
                          label: Name
                          color: '#ffaeae'
                        - name: '[Extern] Telefonnummer'
                          type: KIKUKO_TOOL
                          label: Telefonnummer
                          color: '#acc2b9'
                        - name: '[Fuzzy] Haltestellen'
                          type: KIKUKO_TOOL
                          label: Haltestelle
                          color: '#408080'
                        - name: '[Fuzzy] Ortsnamen'
                          type: KIKUKO_TOOL
                          label: Ort
                          color: '#cdfa8f'
                      classifiers:
                        - type: KIKUKO_CLASSIFIER
                          name: Beschwerde3Klassifikator2
                          propertyName: Kategorie
                      sentimentAnalyzer:
                        type: NONE
                        name: NONE
                      emotionAnalyzer:
                        type: NONE
                        name: NONE
                      active: true
                    receiveDate: '2019-08-05'
                    receiveTime: '18:59:02'
                    sentiment:
                      emotion:
                        value: Ueberraschung
                        name: Emotion
                        probabilities:
                          Freude: 17.61
                          Trauer: 29.65
                          Ueberraschung: 52.74
                        setByUser: false
                      tendency: 0.1
                    properties:
                      - value: Fahrt nicht erfolgt
                        name: Kategorie
                        probabilities:
                          Fahrt nicht erfolgt: 0.6
                          Sonstiges: 0.4
                          Fahrer unfreundlich: 0
                        setByUser: false
                  - id: 359
                    preview: Vielen Dank für Ihre Rückmeldung, es hat mich sehr gefreut, dass Sie meine
                      Kritik an den Fahrer weitergeleitet haben. Das Busfahren ist weiterhin keine Freude.
                      Heute Morgen fiel der CE 62 aus um 08.13 Uhr in Richtung statt. Und heute nachmittag
                      der C
                    state: NEW
                    configuration:
                      id: 94
                      name: Kein Sentiment
                      extractors:
                        - name: 'Linien Extraktor'
                          type: KIKUKO_TOOL
                          label: Linie
                          color: '#aff4fa'
                        - name: '[Extern] Geldbetrag'
                          type: KIKUKO_TOOL
                          label: Geldbetrag
                          color: '#f5ff8a'
                        - name: 'Vorgangsnummer'
                          type: KIKUKO_TOOL
                          label: Vorgangsnummer
                          color: '#ffaeae'
                        - name: '[Extern] Datum Extraktor'
                          type: KIKUKO_TOOL
                          label: Datum
                          color: '#c7c7c7'
                        - name: '[Extern] Personen Extraktor'
                          type: KIKUKO_TOOL
                          label: Name
                          color: '#ffaeae'
                        - name: '[Extern] Telefonnummer'
                          type: KIKUKO_TOOL
                          label: Telefonnummer
                          color: '#acc2b9'
                        - name: '[Fuzzy] Haltestellen'
                          type: KIKUKO_TOOL
                          label: Haltestelle
                          color: '#408080'
                        - name: '[Fuzzy] Ortsnamen'
                          type: KIKUKO_TOOL
                          label: Ort
                          color: '#cdfa8f'
                      classifiers:
                        - type: KIKUKO_CLASSIFIER
                          name: Beschwerde3Klassifikator2
                          propertyName: Kategorie
                      sentimentAnalyzer:
                        type: NONE
                        name: NONE
                      emotionAnalyzer:
                        type: NONE
                        name: NONE
                      active: true
                    receiveDate: '2019-08-04'
                    receiveTime: '21:55:33'
                    sentiment:
                      emotion:
                        value: Freude
                        name: Emotion
                        probabilities:
                          Verachtung: 5.64
                          Freude: 43.49
                          Trauer: 18.31
                          Ueberraschung: 32.56
                        setByUser: false
                      tendency: 0.5
                    properties:
                      - value: Fahrt nicht erfolgt
                        name: Kategorie
                        probabilities:
                          Fahrt nicht erfolgt: 0
                          Sonstiges: 0
                          Fahrer unfreundlich: 0
                        setByUser: false
                  - id: 269
                    preview: Sehr geehrte Damen und Herren, am heutigen Tag wollte ich die Linie 647
                      um 8.20 Uhr von Hattingen in Richtung Wuppertal nutzen. Als ich um 8.15 Uhr am
                      Busbahnhof ankam, informierten mich weitere Fahrgäste, dass der Bus um 7.40 Uhr
                      bereits ausgefallen
                    state: NEW
                    configuration:
                      id: 94
                      name: Kein Sentiment
                      extractors:
                        - name: 'Linien Extraktor'
                          type: KIKUKO_TOOL
                          label: Linie
                          color: '#aff4fa'
                        - name: '[Extern] Geldbetrag'
                          type: KIKUKO_TOOL
                          label: Geldbetrag
                          color: '#f5ff8a'
                        - name: 'Vorgangsnummer'
                          type: KIKUKO_TOOL
                          label: Vorgangsnummer
                          color: '#ffaeae'
                        - name: '[Extern] Datum Extraktor'
                          type: KIKUKO_TOOL
                          label: Datum
                          color: '#c7c7c7'
                        - name: '[Extern] Personen Extraktor'
                          type: KIKUKO_TOOL
                          label: Name
                          color: '#ffaeae'
                        - name: '[Extern] Telefonnummer'
                          type: KIKUKO_TOOL
                          label: Telefonnummer
                          color: '#acc2b9'
                        - name: '[Fuzzy] Haltestellen'
                          type: KIKUKO_TOOL
                          label: Haltestelle
                          color: '#408080'
                        - name: '[Fuzzy] Ortsnamen'
                          type: KIKUKO_TOOL
                          label: Ort
                          color: '#cdfa8f'
                      classifiers:
                        - type: KIKUKO_CLASSIFIER
                          name: Beschwerde3Klassifikator2
                          propertyName: Kategorie
                      sentimentAnalyzer:
                        type: NONE
                        name: NONE
                      emotionAnalyzer:
                        type: NONE
                        name: NONE
                      active: true
                    receiveDate: '2019-08-04'
                    receiveTime: '16:14:41'
                    sentiment:
                      emotion:
                        value: Trauer
                        name: Emotion
                        probabilities:
                          Verachtung: 23.53
                          Trauer: 76.47
                        setByUser: false
                      tendency: -0.3
                    properties:
                      - value: Fahrt nicht erfolgt
                        name: Kategorie
                        probabilities:
                          Fahrt nicht erfolgt: 0.6
                          Sonstiges: 0.3
                          Fahrer unfreundlich: 0
                        setByUser: false

        400:
          $ref: '#/components/responses/IllegalParametersError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/import:
    post:
      tags:
        - complaints
      summary: Läd eine neue Beschwerde in die Datenbank und startet die Analyse.
      description: >
        Über diese Schnittstelle können Dateien hochgeladen werden. Akzeptiert werden txt, docx,
        doc und pdf Dateien mit einer maximalen Zeichenanzahl von 10000 Zeichen.
        Alternativ können über application/json direkt Texte eingefügt werden.

        <p>Die Beschwerde wird nach dem Upload im Hintergrund analysiert. Die verwendeten Analyse-
         Tools werden durch die verwendete Konfiguration festgelegt, über den Query-Parameter
         <b>configId</b> kann eine bestimmte Konfiguration angegeben werden, mit der die neue
         Beschwerde analysiert werden soll. Nach dem Analyseprozess wird mit den vorhandenen Ergebnissen
         eine <b>Antwort</b> generiert.</p>
      parameters:
        - $ref: '#/components/parameters/ConfigIdQueryParameter'
      requestBody:
        description: Die Datei/der Text, die hochgeladen werden soll.
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
              example: file content
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  example: 'In Ihrem Schreiben vom 8. 2. 2013 schreiben Sie, nur "ein" Bus der Linie CE62 von Wuppertal-Elberfeld nach Wuppertal-Ronsdorf sei ausgefallen. Dies kann so nicht stimmen. Vielmehr stellt sich mir und anderen die Frage, weshalb ständig und gehäuft Buslinien der WSW ausfallen und Fahrten entgegen dem Fahrplan nicht angeboten werden. Als Rad-, Bahn- und gelegentlicher Autofahrer benutze ich eher selten die Busse der WSW. Wenn ich sie benutze, ergeben sich auffällig häufig Ausfälle und deutliche Verspätungen. Dies betrifft auffallend oft die als schnell konzipierten CE-Linien, nach meiner jüngeren Erfahrung CE61/CE62, weniger auch CE64/CE65 (Elberfeld-Cronenberg), und Nebenlinien wie etwa 643. Einzelne Ihrer Mitarbeiter berichten mir übereinstimmend, die Personaldecke sei zu dünn, um Ausfälle einzelner Mitarbeiter auszugleichen. Wegen spürbaren Personalmangels - nicht, wie Sie schreiben, vereinzelt wegen Krankheit - würden häufig Fahrten ausfallen. Viele Fahrer berichten anschaulich, dass in manchen Stoßzeiten vergeblich wartende Passagiere an Haltestellen stünden. Teilweise berichtet man mir von gezielten Maßnahmen, um Einsparungen herbeizuführen sowie nicht ausgeglichenen Überstunden. Ihre Fahrer sehen dies unmittelbar mit der Politik der WSW verknüpft, die CE-Linien ab März/April 2013 auszudünnen.Der Vorgang, auf den sich Ihr Schreiben bezieht, lief tatsächlich so ab: Am 1. 2. 2013 wartete ich an der Morianstraße in Wuppertal mit meinem x Monate alten Sohn nachmittags auf eine Busverbindung nach Ronsdorf, Haltestelle Kniprodestraße. Ich beabsichtigte, den Bus CE62 um 15:47 Uhr zu nehmen. Wir waren auf dem Weg zu einer Nachmittagsveranstaltung für Eltern mit Kleinstkindern, die ich verpasste:Die CE62 um 15:47 Uhr fuhr nicht, ebenso nicht die nachfolgenden Busse der Linie CE62:- 16:07 Uhr- 16:27 UhrEs fuhren ferner nicht die Busse der Linie 620 um- 15:55 Uhr- 16:15 Uhr- 16:35 Uhrdie Haltestelle an. Ihr Schreiben legt nahe, dass es sich nur um vereinzelte Fälle handele. Unmittelbar bei meinem nächsten Fahrtantritt mit der WSW eine Woche später kam es wiederum zu einem Ausfall. Am Freitag, 8. 2. 2013, fiel Linie CE61 um 15:38 Uhr an der Haltestelle Am Stadtbahnhof in Richtung Barmen aus. Mit ca. 25 Minuten Verspätung erreichte ich mit der Linie 640 (ab 15:48 Uhr) gegen 16:25 Uhr den Alten Markt in Barmen.Heute, am 21. 2. 2013, fielen die Busse der Linie CE64 von Wuppertal Hbf in Richtung Cronenberg um 06:40 Uhr und um 07:00 Uhr aus. Ein Fahrgast erreichte deshalb nicht pünktlich seine Arbeitsstelle in Solingen. Würde ich häufiger fahren, würde ich vermutlich noch häufiger dadurch Zeit verlieren. Ich bitte Sie daher freundlich, Ihre Dienstleistungen bestmöglich fahrplangemäß anzubieten.'

      operationId: importComplaint
      responses:
        201:
          description: Datei wurde erfolgreich hochgeladen, der Text extrahiert, ausgewertet und als Beschwerde im System gespeichert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
              example:
                id: 939
                preview: In Ihrem Schreiben vom 8. 2. 2013 schreiben Sie, nur "ein" Bus der Linie
                  CE62 von Wuppertal-Elberfeld nach Wuppertal-Ronsdorf sei ausgefallen. Dies kann
                  so nicht stimmen. Vielmehr stellt sich mir und anderen die Frage, weshalb ständig
                  und gehäuft Bus
                state: ANALYSING
                configuration:
                  id: 94
                  name: Kein Sentiment
                  extractors:
                    - name: 'Linien Extraktor'
                      type: KIKUKO_TOOL
                      label: Linie
                      color: '#aff4fa'
                    - name: '[Extern] Geldbetrag'
                      type: KIKUKO_TOOL
                      label: Geldbetrag
                      color: '#f5ff8a'
                    - name: 'Vorgangsnummer'
                      type: KIKUKO_TOOL
                      label: Vorgangsnummer
                      color: '#ffaeae'
                    - name: '[Extern] Datum Extraktor'
                      type: KIKUKO_TOOL
                      label: Datum
                      color: '#c7c7c7'
                    - name: '[Extern] Personen Extraktor'
                      type: KIKUKO_TOOL
                      label: Name
                      color: '#ffaeae'
                    - name: '[Extern] Telefonnummer'
                      type: KIKUKO_TOOL
                      label: Telefonnummer
                      color: '#acc2b9'
                    - name: '[Fuzzy] Haltestellen'
                      type: KIKUKO_TOOL
                      label: Haltestelle
                      color: '#408080'
                    - name: '[Fuzzy] Ortsnamen'
                      type: KIKUKO_TOOL
                      label: Ort
                      color: '#cdfa8f'
                  classifiers:
                    - type: KIKUKO_CLASSIFIER
                      name: Beschwerde3Klassifikator2
                      propertyName: Kategorie
                  sentimentAnalyzer:
                    type: NONE
                    name: NONE
                  emotionAnalyzer:
                    type: NONE
                    name: NONE
                  active: true
                receiveDate: '2019-08-06'
                receiveTime: '12:59:45.267471'
                sentiment:
                  emotion:
                    value: Unbekannt
                    name: Emotion
                    probabilities:
                      Unbekannt: 1
                    setByUser: false
                  tendency: 0
                properties: []

        400:
          description: Text konnte nicht aus Datei extrahiert werden oder Text ist zu lang.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        404:
          description: Die Konfiguration mit der gegebenen ID existiert nicht.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        500:
          description: Fehlerhafte Konfiguration der Extraktoren, Klassifikatoren oder den Antwortbausteinen oder externe Extraktoren konnten nicht aufgerufen werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'

  /api/complaints/{complaintId}:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    get:
      tags:
        - complaints
      summary: Gibt eine Beschwerde mit der gegebenen ID zurück.
      description: Gibt eine Beschwerde mit der gegebenen ID zurück.
      operationId: getComplaint
      responses:
        200:
          description: Erfolgreiche Anfrage.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    patch:
      tags:
        - complaints
      summary: Aktualisiert eine Beschwerde.
      description: Mit dieser Anfrage können Emotion, Tendenz, Kategorie und Status einer Beschwerde aktualisiert werden. Werden Kategorie und Sentiment gändert, so wird das setByUser-Attribut auf true gesetzt.
      requestBody:
        description: Ein Objekt mit Attributen, die aktualisiert werden sollen. Es müssen nur die Attribute angegeben werden, bei denen eine Änderung an der Beschwerde vorgenommen werden soll.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplaintUpdateRequest'
            example:
              "state": "CLOSED"
              "subject": "Fahrer unfreundlich"

      operationId: updateComplaint
      responses:
        200:
          description: Beschwerde wurde erfolgreich aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
              example:
                id: 269
                preview: Sehr geehrte Damen und Herren, am heutigen Tag wollte ich die Linie 647
                  um 8.20 Uhr von Hattingen in Richtung Wuppertal nutzen. Als ich um 8.15 Uhr am
                  Busbahnhof ankam, informierten mich weitere Fahrgäste, dass der Bus um 7.40 Uhr
                  bereits ausgefallen
                state: CLOSED
                configuration:
                  id: 94
                  name: Kein Sentiment
                  extractors:
                    - name: 'Linien Extraktor'
                      type: KIKUKO_TOOL
                      label: Linie
                      color: '#aff4fa'
                    - name: '[Extern] Geldbetrag'
                      type: KIKUKO_TOOL
                      label: Geldbetrag
                      color: '#f5ff8a'
                    - name: 'Vorgangsnummer'
                      type: KIKUKO_TOOL
                      label: Vorgangsnummer
                      color: '#ffaeae'
                    - name: '[Extern] Datum Extraktor'
                      type: KIKUKO_TOOL
                      label: Datum
                      color: '#c7c7c7'
                    - name: '[Extern] Personen Extraktor'
                      type: KIKUKO_TOOL
                      label: Name
                      color: '#ffaeae'
                    - name: '[Extern] Telefonnummer'
                      type: KIKUKO_TOOL
                      label: Telefonnummer
                      color: '#acc2b9'
                    - name: '[Fuzzy] Haltestellen'
                      type: KIKUKO_TOOL
                      label: Haltestelle
                      color: '#408080'
                    - name: '[Fuzzy] Ortsnamen'
                      type: KIKUKO_TOOL
                      label: Ort
                      color: '#cdfa8f'
                  classifiers:
                    - type: KIKUKO_CLASSIFIER
                      name: Beschwerde3Klassifikator2
                      propertyName: Kategorie
                  sentimentAnalyzer:
                    type: NONE
                    name: NONE
                  emotionAnalyzer:
                    type: NONE
                    name: NONE
                  active: true
                receiveDate: '2019-08-04'
                receiveTime: '16:14:41'
                sentiment:
                  emotion:
                    value: Trauer
                    name: Emotion
                    probabilities:
                      Verachtung: 23.53
                      Trauer: 76.47
                    setByUser: false
                  tendency: 0
                properties:
                  - value: Fahrer unfreundlich
                    name: Kategorie
                    probabilities:
                      Fahrt nicht erfolgt: 0.6
                      Sonstiges: 0.3
                      Fahrer unfreundlich: 0
                    setByUser: true
        400:
          description: Die Beschwerde kann im aktuellen Zustand nicht modifiziert werden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
              example:
                timestamp: '2019-07-04T15:24:23.3942221'
                status: 400
                message: 'Beschwerde kann nicht modifiziert werden, da sie bereits geschlossen ist.'
                title: 'Beschwerde geschlossen'
                exception: 'IllegalStateException'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    delete:
      tags:
        - complaints
      summary: Löscht eine Beschwerde.
      description: Löscht eine Beschwerde mit gegebener Id, falls diese vorhanden ist.
      operationId: deleteComplaint
      responses:
        204:
          description: Löschen erfolgreich.
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/{complaintId}/text:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    get:
      tags:
        - complaints
      summary: Gibt den Text einer Beschwerde zurück
      description: Gibt den Text der Beschwerde mit der gegebenen ID zurück.

      operationId: getText
      responses:
        200:
          description: Erfolgreiche Anfrage.
          content:
            application/json:
              schema:
                type: object
                properties:
                  text:
                    type: string
                    example: 'In Ihrem Schreiben vom 8. 2. 2013 schreiben Sie, nur "ein" Bus der Linie CE62 von Wuppertal-Elberfeld nach Wuppertal-Ronsdorf sei ausgefallen. Dies kann so nicht stimmen. Vielmehr stellt sich mir und anderen die Frage, weshalb ständig und gehäuft Buslinien der WSW ausfallen und Fahrten entgegen dem Fahrplan nicht angeboten werden. Als Rad-, Bahn- und gelegentlicher Autofahrer benutze ich eher selten die Busse der WSW. Wenn ich sie benutze, ergeben sich auffällig häufig Ausfälle und deutliche Verspätungen. Dies betrifft auffallend oft die als schnell konzipierten CE-Linien, nach meiner jüngeren Erfahrung CE61/CE62, weniger auch CE64/CE65 (Elberfeld-Cronenberg), und Nebenlinien wie etwa 643. Einzelne Ihrer Mitarbeiter berichten mir übereinstimmend, die Personaldecke sei zu dünn, um Ausfälle einzelner Mitarbeiter auszugleichen. Wegen spürbaren Personalmangels - nicht, wie Sie schreiben, vereinzelt wegen Krankheit - würden häufig Fahrten ausfallen. Viele Fahrer berichten anschaulich, dass in manchen Stoßzeiten vergeblich wartende Passagiere an Haltestellen stünden. Teilweise berichtet man mir von gezielten Maßnahmen, um Einsparungen herbeizuführen sowie nicht ausgeglichenen Überstunden. Ihre Fahrer sehen dies unmittelbar mit der Politik der WSW verknüpft, die CE-Linien ab März/April 2013 auszudünnen.Der Vorgang, auf den sich Ihr Schreiben bezieht, lief tatsächlich so ab: Am 1. 2. 2013 wartete ich an der Morianstraße in Wuppertal mit meinem x Monate alten Sohn nachmittags auf eine Busverbindung nach Ronsdorf, Haltestelle Kniprodestraße. Ich beabsichtigte, den Bus CE62 um 15:47 Uhr zu nehmen. Wir waren auf dem Weg zu einer Nachmittagsveranstaltung für Eltern mit Kleinstkindern, die ich verpasste:Die CE62 um 15:47 Uhr fuhr nicht, ebenso nicht die nachfolgenden Busse der Linie CE62:- 16:07 Uhr- 16:27 UhrEs fuhren ferner nicht die Busse der Linie 620 um- 15:55 Uhr- 16:15 Uhr- 16:35 Uhrdie Haltestelle an. Ihr Schreiben legt nahe, dass es sich nur um vereinzelte Fälle handele. Unmittelbar bei meinem nächsten Fahrtantritt mit der WSW eine Woche später kam es wiederum zu einem Ausfall. Am Freitag, 8. 2. 2013, fiel Linie CE61 um 15:38 Uhr an der Haltestelle Am Stadtbahnhof in Richtung Barmen aus. Mit ca. 25 Minuten Verspätung erreichte ich mit der Linie 640 (ab 15:48 Uhr) gegen 16:25 Uhr den Alten Markt in Barmen.Heute, am 21. 2. 2013, fielen die Busse der Linie CE64 von Wuppertal Hbf in Richtung Cronenberg um 06:40 Uhr und um 07:00 Uhr aus. Ein Fahrgast erreichte deshalb nicht pünktlich seine Arbeitsstelle in Solingen. Würde ich häufiger fahren, würde ich vermutlich noch häufiger dadurch Zeit verlieren. Ich bitte Sie daher freundlich, Ihre Dienstleistungen bestmöglich fahrplangemäß anzubieten'

  /api/complaints/{complaintId}/refresh:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    patch:
      tags:
        - complaints
      summary: Ruft alle Analyse-Funktionen erneut auf.
      description: Alle Tools werden neu ausgeführt, vorhandene Informationen werden überschrieben. Über die Parameter kann definiert werden, ob vom Nutzer gesetzte Information dabei nicht überschreiben werden soll und welche Konfiguration verwendet werden soll.
      parameters:
        - name: keepUserInformation
          in: query
          description: Falls dieser Wert auf true gesetzt wird, werden vom Nutzer gesetzte Informationen nicht überschrieben.
          required: false
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/ConfigIdQueryParameter'
      operationId: refreshComplaint
      responses:
        200:
          description: Beschwerde wurde erfolgreich aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
        400:
          description: Beschwerde wurde bereits geschlossen.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        404:
          description: Eine Konfiguration oder eine Beschwerde mit der gegebenen ID existiert nicht.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        500:
          description: Unerwarteter Serverfehler, externe Tools können nicht erreicht werden oder fehlerhafte Konfiguration.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'

  /api/complaints/{complaintId}/close:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    patch:
      tags:
        - complaints
      summary: Schließt eine Beschwerde ab und führt alle Aktionen aus.
      description: Die Beschwerde mit der gegebenen ID wird auf geschlossenen gesetzt, wodurch sie nicht mehr bearbeitet werden kann. Alle Aktionen, die zu dieser Beschwerde gehören, werden ausgeführt.

      operationId: closeComplaint
      responses:
        200:
          description: Beschwerde wurde erfolgreich abgeschlossen, die Beschwerde wird als Body zurückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Complaint'
              example:
                id: 269
                preview: Sehr geehrte Damen und Herren, am heutigen Tag wollte ich die Linie 647
                  um 8.20 Uhr von Hattingen in Richtung Wuppertal nutzen. Als ich um 8.15 Uhr am
                  Busbahnhof ankam, informierten mich weitere Fahrgäste, dass der Bus um 7.40 Uhr
                  bereits ausgefallen
                state: CLOSED
                configuration:
                  id: 94
                  name: Kein Sentiment
                  extractors:
                    - name: 'Linien Extraktor'
                      type: KIKUKO_TOOL
                      label: Linie
                      color: '#aff4fa'
                    - name: '[Extern] Geldbetrag'
                      type: KIKUKO_TOOL
                      label: Geldbetrag
                      color: '#f5ff8a'
                    - name: 'Vorgangsnummer'
                      type: KIKUKO_TOOL
                      label: Vorgangsnummer
                      color: '#ffaeae'
                    - name: '[Extern] Datum Extraktor'
                      type: KIKUKO_TOOL
                      label: Datum
                      color: '#c7c7c7'
                    - name: '[Extern] Personen Extraktor'
                      type: KIKUKO_TOOL
                      label: Name
                      color: '#ffaeae'
                    - name: '[Extern] Telefonnummer'
                      type: KIKUKO_TOOL
                      label: Telefonnummer
                      color: '#acc2b9'
                    - name: '[Fuzzy] Haltestellen'
                      type: KIKUKO_TOOL
                      label: Haltestelle
                      color: '#408080'
                    - name: '[Fuzzy] Ortsnamen'
                      type: KIKUKO_TOOL
                      label: Ort
                      color: '#cdfa8f'
                  classifiers:
                    - type: KIKUKO_CLASSIFIER
                      name: Beschwerde3Klassifikator2
                      propertyName: Kategorie
                  sentimentAnalyzer:
                    type: NONE
                    name: NONE
                  emotionAnalyzer:
                    type: NONE
                    name: NONE
                  active: true
                receiveDate: '2019-08-04'
                receiveTime: '16:14:41'
                sentiment:
                  emotion:
                    value: Trauer
                    name: Emotion
                    probabilities:
                      Verachtung: 23.53
                      Trauer: 76.47
                    setByUser: false
                  tendency: 0
                properties:
                  - value: Fahrer unfreundlich
                    name: Kategorie
                    probabilities:
                      Fahrt nicht erfolgt: 0.6
                      Sonstiges: 0.3
                      Fahrer unfreundlich: 0
                    setByUser: true
        400:
          description: Beschwerde wurde bereits geschlossen.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/count:
    get:
      tags:
        - complaints
      summary: Gibt die Anzahl der Beschwerden zurück.
      description: Gibt die Anzahl von Beschwerden in der Datenbank zurück, wobei Filter angewendet werden können.
      parameters:
        - $ref: '#/components/parameters/DateMinParameter'
        - $ref: '#/components/parameters/DateMaxParameter'
        - $ref: '#/components/parameters/EmotionParameter'
        - $ref: '#/components/parameters/SubjectParameter'
        - $ref: '#/components/parameters/KeywordsParameter'

      operationId: countComplaints
      responses:
        200:
          description: Erfolgreiche Anfrage.
          content:
            text/plain:
              schema:
                type: integer
                format: int64
                example: '3'
        400:
          description: Üngültige Angabe von Parametern.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/{complaintId}/log:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    get:
      tags:
        - complaints
      summary: Gibt den Log einer Beschwerde zurück
      description: Gibt alle Logeinträge einer Beschwerde zurück. Logeinträge enthalten Informationen über den Analyse-Prozess sowie zu Fehlern, die beim diesem auftreten.

      operationId: getLog
      responses:
        200:
          description: Erfolgreiche Anfrage
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogItem'
                example:
                  - category: GENERAL
                    message: Beschwerde erstellt.
                    date: '2019-08-05'
                    time: '16:59:02'
                  - category: ANALYSIS
                    message: 'Klassifikator ''Beschwerde3Klassifikator2'': Eigenschaft ''Kategorie''
                      auf ''Fahrt nicht erfolgt'' gesetzt'
                    date: '2019-08-05'
                    time: '16:59:04'
                  - category: ANALYSIS
                    message: 'Emotionsanalysator ''Default'': Emotion auf ''Ueberraschung'' gesetzt'
                    date: '2019-08-05'
                    time: '16:59:05'
                  - category: ANALYSIS
                    message: 'Extraktor QuerimoniaExtract: 50 Entitäten gefunden.'
                    date: '2019-08-05'
                    time: '16:59:42'
                  - category: ANALYSIS
                    message: 'Sentiment-Analysator ''Default'': Tendenz auf ''0.0'' gesetzt'
                    date: '2019-08-05'
                    time: '16:59:43'
                  - category: ANALYSIS
                    message: 'Antwort mit 8 Komponenten und 0 Aktionen generiert.'
                    date: '2019-08-05'
                    time: '16:59:43'
                  - category: GENERAL
                    message: 'Entität [id=588,label=Datum,start=30,end=34,value=2013,setByUser=false,preferred=false,extractor=QuerimoniaExtract]
                      gelöscht'
                    date: '2019-08-05'
                    time: '17:00:36'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/default:
    post:
      tags:
        - complaints
        - demo
      summary: Fügt Beispiel-Beschwerden in die Datenbank ein
      description: >
        Fügt eine Menge an Beispiel-Beschwerden in die Datenbank ein. Dabei kann die Anzahl begrenzt
        werden. Hier werden <b>nur die Texte</b> importiert und die Analyse gestartet. Es kann die
        verwendete Konfiguration bestimmt werden.
      parameters:
        - name: count
          in: query
          description: Die maximal Anzahl an Beispiel-Beschwerden, die in Datenbank geladen werden sollen. Falls dies nicht angegeben wird, werden 150 Beispielbeschwerden geladen. Es können bis zu 767 Beschwerden geladen werden.
          schema:
            type: integer
            format: int32
            minimum: 0
            maximum: 767
            default: 150
            example: 10
        - $ref: '#/components/parameters/ConfigIdQueryParameter'
      operationId: addDefaultComplaints
      responses:
        200:
          description: Erfolgreiche Anfrage.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Complaint'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/all:
    delete:
      tags:
        - complaints
        - demo
      summary: Löscht alle Beschwerden aus der Datenbank
      description: Löscht alle Beschwerden aus der Datenbank.
      operationId: deleteAllComplaints
      responses:
        204:
          description: Löschen erfolgreich.
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/{complaintId}/entities:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    get:
      tags:
        - entities
      summary: Gibt die Entitäten der Beschwerde zurück.
      description: Gibt alle Entitäten, die in der Beschwerde gefunden wurden, als Liste zurück.

      operationId: getEntities
      responses:
        200:
          description: Die Entitäten werden zurückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    post:
      tags:
        - entities
      summary: Fügt eine neue Named Entity hinzu.
      description: Eine neue Named Entity wird der Liste der Entitäten der Beschwerde hinzugefügt.

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedEntity'

      operationId: addEntity
      responses:
        201:
          description: Die Entity wurde der Beschwerde hinzugefügt. Eine aktualisierte Entity-Liste wird zurückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityArray'
        400:
          description: Die gegebene Entität ist schon vorhanden (mit gleichem Extraktor an der exakt gleichen Position), der gebene Extraktor ist unbekannt, die Beschwerde ist bereits abgeschlossen oder die gegebenen Indices liegen außerhalb der Textgrenzen.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/{complaintId}/entities/{entityId}:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'
      - name: entityId
        in: path
        description: Die eindeutige ID der Entität..
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          example: 1

    put:
      tags:
        - entities
      summary: Überschreibt eine Entität mit der gegebenen Entität.
      description: >
        Schreibt die gegebene Entität an Stelle der gegebenen ID in die Datenbank. Falls die Entität
        in einem Antwortbaustein verwendet wird, wird in diesem auch die aktualisierte Entität
        verwendet.

      requestBody:
        description: Diese Entität wird anstelle der Entität mit der gegebenen ID in der Datenbank gespeichert.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamedEntity'
            example:
              id: 593
              label: Linie
              start: 619
              end: 621
              value: '62'
              setByUser: true
              preferred: false
              extractor: QuerimoniaExtract
              color: "#aff4fa"

      operationId: updateEntity
      responses:
        200:
          description: Die Entität wurde aktualisiert. Gibt die aktualisierte Entitätsliste der Beschwerde zurück.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamedEntity'
                example:
                  - id: 593
                    label: Linie
                    start: 619
                    end: 621
                    value: 62
                    setByUser: true
                    preferred: false
                    extractor: QuerimoniaExtract
                    color: "#aff4fa"
                  - id: 589
                    label: Linie
                    start: 74
                    end: 78
                    value: CE62
                    setByUser: false
                    preferred: false
                    extractor: QuerimoniaExtract
                    color: "#aff4fa"
                  - id: 592
                    label: Linie
                    start: 612
                    end: 616
                    value: CE61
                    setByUser: false
                    preferred: false
                    extractor: QuerimoniaExtract
                    color: "#aff4fa"
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    delete:
      tags:
        - entities
      summary: Löscht eine Named Entity.
      description: >
        Eine neue Named Entity wird aus der Liste der Entitäten der gebebenen Beschwerde entfernt.
        Die Entität wird aber ggf. nicht aus der Datenbank gelöscht, kann also in Antworten noch
        verwendet werden. Nach dieser Operation ist ein <i>refresh</i> der Antwort sinnvoll.

      operationId: deleteEntity
      responses:
        200:
          description: Die Entity wurde der Beschwerde hinzugefügt. Eine aktualisierte Entity-Liste wird zurückgegeben.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NamedEntity'
                example:
                  - id: 589
                    label: Linie
                    start: 74
                    end: 78
                    value: CE62
                    setByUser: false
                    preferred: false
                    extractor: QuerimoniaExtract
                    color: "#aff4fa"
                  - id: 592
                    label: Linie
                    start: 612
                    end: 616
                    value: CE61
                    setByUser: false
                    preferred: false
                    extractor: QuerimoniaExtract
                    color: "#aff4fa"
        404:
          description: Die gegebene Entität/Beschwerde ist nicht vorhanden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/combinations:
    get:
      tags:
        - combinations
      summary: Gibt alle Kombinationen der Datenbank zurück.
      description: Gibt alle Kombinationen der Datenbank zurück.

      operationId: getAllCombinations
      responses:
        200:
          description: Erfolgreiche Anfrage.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineStopCombination'
        500:
          $ref: '#/components/responses/UnexpectedError'

    post:
      tags:
        - combinations
      summary: Fügt Kombinationen in die Datenbank ein.
      description: Fügt Kombinationen in die Datenbank ein.
      operationId: addCombinations

      requestBody:
        description: Enthält ein array der Kombinationen.
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LineStopCombination'
      responses:
        204:
          description: Erfolgreiches hinzufügen
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/combinations/default:
    post:
      tags:
        - combinations
        - demo
      summary: Fügt Beispiel-Kombinationen in die Datenbank ein.
      description: Fügt die Kombinationen aus den Beispieldaten aus dem Bereich Wuppertal hinzu.

      operationId: addDefaultCombinations
      responses:
        200:
          description: Erfolgreiche Anfrage.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineStopCombination'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/combinations/all:
    delete:
      tags:
        - combinations
        - demo
      summary: Löscht alle Kombinationen aus der Datenbank.
      description: Alle Kombinationen werden aus der Datenbank entfernt.
      operationId: deleteCombinations
      responses:
        204:
          description: Löschen erfolgreich.
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/combinations/{complaintId}:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    get:
      tags:
        - combinations
      summary: Gibt die Kombinationen einer Beschwerde zurück.
      description: Gibt die Kombinationen einer Beschwerde zurück.

      operationId: getCombinationsOfComplaint
      responses:
        200:
          description: Erfolgreiche Anfrage.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LineStopCombination'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/{complaintId}/response:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    get:
      tags:
        - responses
      summary: Gibt die generierte Antwort zu einer Beschwerde zurück.
      description: Zur jeder Beschwerde wird eine Antwort generiert, die über diese Schnittstelle abgerufen werden kann. Eine Antwort enthält eine Liste an Antwortbausteinen sowie eine Liste an Aktionen.
      operationId: getResponse
      responses:
        200:
          description: Die Antwort der Beschwerde wird zurückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuggestion'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/complaints/{complaintId}/response/refresh:
    parameters:
      - $ref: '#/components/parameters/ComplaintIdParameter'

    patch:
      tags:
        - responses
      summary: Generiert eine neue Antwort zu einer Beschwerde.
      description: Die Antwort zu einer Beschwerde wird neugeneriert und zurückgegben.
      operationId: refreshResponse
      responses:
        200:
          description: Die neu generierte Antwort der Beschwerde wird zurückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseSuggestion'
        400:
          description: Die Beschwerde wurde bereits geschlossen.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          description: Fehlerhaft konfigurierte Textbausteine/Aktionen, unerwarteter Serverfehler
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'

  /api/components:
    get:
      tags:
        - components
      summary: Gibt die gespeicherten Antwortbausteine zurück.
      description: Hier können alle in der Datenbank gespeicherten Antwortbausteine abgerufen werden. Dabei ist Filtern/Pagination möglich.
      parameters:
        - $ref: '#/components/parameters/CountParameter'
        - $ref: '#/components/parameters/PageParameter'
        - name: sort_by
          in: query
          description: Hier können alle Kategorien angegeben werden, nach denen die Anfrage sortiert werden soll. Die Reihenfolge im Array bestimmt die Priorität beim Sortieren.
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [id_desc, id_asc, priority_desc, priority_asc, name_desc, name_asc]
              default: name_asc
        - $ref: '#/components/parameters/KeywordsParameter'
        - $ref: '#/components/parameters/ActionCode'

      operationId: getResponseComponents
      responses:
        200:
          description: Die Antwortbausteine werden gefiltert und sortiert zurückgegeben.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseComponent'
        400:
          $ref: '#/components/responses/IllegalParametersError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    post:
      tags:
        - components
      summary: Fügt dem System einen neuen Antwortbaustein hinzu.
      description: Fügt einen neuen Antwortbaustein hinzu. Dieser kann Platzhalter enthalten, welche mit Entitäten aus der Beschwerden ersetzt werden.
      requestBody:
        description: Der neue Textbaustein, der dem System hinzufügt werden soll. Im Request-Body müssen ID und requiredEntities nicht angegeben werden, diese werden bei Angabe nicht beachtet.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseComponent'

      operationId: addResponseComponent
      responses:
        201:
          description: Das Template ist richtig formatiert, die Regelbeschreibung ist gültig und wurde in der Datenbank gespeichert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseComponent'
        400:
          description: Der Textbaustein enthält ungültige Formatierungen oder überschreitet das Zeichenlimit von 5000 Zeichen.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/XmlException'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/components/default:
    post:
      tags:
        - components
        - demo
      summary: Fügt dem System eine Menge an Standard-Antwortbausteinen hinzu.
      description: Fügt eine Menge an Standard-Antwortbausteinen hinzu. Diese enthält verschiedene Bausteine für Begrüßungen, Eingangsdaten, Problembeschreibungen, Entschuldigungen, Lösungsvorschläge, Erstattungen und Schlüsse. Die Bausteine gehören zu den Kategorien Fahrer unfreundlich, Fahrt nicht erfolgt, Sonstiges. Jeder Baustein hat drei verschiedene Texte und verschiedene Varianten mit/ohne Platzhaltern.

      operationId: addDefaultComponents
      responses:
        200:
          description: Die Standard Bausteine wurden erfolgreich hinzugefügt.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResponseComponent'
        500:
          description: Die Datei mit den Standard-Antwortbausteinen ist nicht vorhanden, korrupt oder nicht richtig formatiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'

  /api/components/{componentId}:
    parameters:
      - name: componentId
        in: path
        description: Die eindeutige ID des Bausteins.
        required: true
        schema:
          type: integer
          format: int64
          minimum: 1
          example: 1

    get:
      tags:
        - components
      summary: Gibt ein bestimmten Antwortbaustein zurück.
      description: Gibt den Antwortbaustein mit der gegebenen ID zurück.
      operationId: getResponseComponent
      responses:
        200:
          description: Der Antwortbaustein wird zurückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseComponent'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    delete:
      tags:
        - components
      summary: Löscht einen Antwortbaustein.
      description: Löscht den Antwortbaustein mit der gegebenen ID aus der Datenbank.
      operationId: deleteResponseComponent
      responses:
        204:
          description: Der Antwortbaustein wurde gelöscht.
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    put:
      tags:
        - components
      summary: Aktualisiert einen bestehenden Antwortbaustein.
      description: Aktualisiert den Antwortbaustein mit der gegebenen ID. Es sollten nur die Properties angegeben werden, die als required markiert sind, "requiredEntities" und ID sollten nicht angegeben werden und werden bei Angabe ignoriert.
      requestBody:
        description: Der aktualisierte Baustein. Im Request-Body müssen ID und requiredEntities nicht angegeben werden, bei Angabe werden diese ignoriert.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResponseComponent'
      operationId: updateResponseComponent
      responses:
        200:
          description: Component erfolgreich aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseComponent'
        404:
          $ref: '#/components/responses/NotFoundError'
        400:
          description: Der Textbaustein enthält ungültige Formatierungen, die Regelbeschreibung ist ungültig oder überschreitet das Zeichenlimit von 5000 Zeichen.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/components/count:
    get:
      tags:
        - components
      summary: Zählt die gespeicherten Antwortbausteine.
      description: Hier kann die Anzahl der Anwortbausteine in der Datenbank abgerufen werden. Dabei können auch Filter angewendet werden.
      parameters:
        - $ref: '#/components/parameters/KeywordsParameter'
        - $ref: '#/components/parameters/ActionCode'
      operationId: countResponseComponents
      responses:
        200:
          description: Die Anzahl der Antwortbausteine werden zurückgegeben.
          content:
            text/plain:
              schema:
                type: integer
                format: int64
                example: 48
        400:
          $ref: '#/components/responses/IllegalParametersError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/components/all:
    delete:
      tags:
        - components
        - demo
      summary: Löscht alle Antwortbausteine aus der Datenbank.
      description: Alle Antwortbausteine werden aus der Datenbank entfernt. Alle Antworten der Beschwerden werden dabei gelöscht.
      operationId: deleteAllResponseComponents
      responses:
        204:
          description: Alle Antwortbausteine wurden aus der Datenbank entfernt.
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/config:
    get:
      tags:
        - config
      summary: Gibt die gespeicherten Konfigurationen zurück.
      description: Hier können alle in der Datenbank gespeicherten Konfigurationen abgerufen werden. Dabei ist Pagination/Sortieren möglich.
      parameters:
        - $ref: '#/components/parameters/CountParameter'
        - $ref: '#/components/parameters/PageParameter'
        - name: sort_by
          in: query
          description: Hier können alle Kategorien angegeben werden, nach denen die Anfrage sortiert werden soll. Die Reihenfolge im Array bestimmt die Priorität beim Sortieren.
          required: false
          schema:
            type: array
            items:
              type: string
              enum: [id_desc, id_asc, name_desc, name_asc]
              default: "id_desc"
      operationId: getConfigurations
      responses:
        200:
          description: Die Konfigurationen werden zurückgegeben
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyzerConfiguration'
        400:
          $ref: '#/components/responses/IllegalParametersError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    post:
      tags:
        - config
      summary: Fügt dem System eine neue Konfiguration hinzu.
      description: Fügt eine neue Konfiguration hinzu. Diese wird **nicht** automatisch als aktive Konfiguration gesetzt.
      requestBody:
        description: Die neue Konfiguration, die dem System hinzugefügt werden soll. Die ID wird automatisch generiert und muss nicht angegeben werden.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzerConfiguration'
            example:
              name: Kein Sentiment
              extractors:
                - name: 'Linien Extraktor'
                  type: KIKUKO_TOOL
                  label: Linie
                  color: '#aff4fa'
                - name: '[Extern] Geldbetrag'
                  type: KIKUKO_TOOL
                  label: Geldbetrag
                  color: '#f5ff8a'
                - name: 'Vorgangsnummer'
                  type: KIKUKO_TOOL
                  label: Vorgangsnummer
                  color: '#ffaeae'
                - name: '[Regex] Datums Extraktion 2'
                  type: KIKUKO_TOOL
                  label: Datum
                  color: '#c7c7c7'
                - name: '[Extern] Person'
                  type: KIKUKO_TOOL
                  label: Name
                  color: '#ffaeae'
                - name: '[Extern] Telefonnummer'
                  type: KIKUKO_TOOL
                  label: Telefonnummer
                  color: '#acc2b9'
                - name: '[Fuzzy] Haltestellen'
                  type: KIKUKO_TOOL
                  label: Haltestelle
                  color: '#408080'
                - name: '[Fuzzy] Ortsnamen'
                  type: KIKUKO_TOOL
                  label: Ort
                  color: '#cdfa8f'
              classifiers:
                - type: KIKUKO_CLASSIFIER
                  name: Beschwerde3Klassifikator2
                  propertyName: Kategorie
              sentimentAnalyzer:
                type: NONE
                name: NONE
              emotionAnalyzer:
                type: NONE
                name: NONE
      operationId: addConfiguration
      responses:
        201:
          description: Die Konfiguration ist gültig und wurde dem System hinzugefügt.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzerConfiguration'
        400:
          description: Ungültige Konfiguration. Es werden ungültige Extraktoren, Klassifikatoren oder Sentiment-Analysierer verwendet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/config/{configId}:
    parameters:
      - $ref: '#/components/parameters/ConfigIdParameter'

    get:
      tags:
        - config
      summary: Gibt eine bestimmte Konfiguration zurück.
      description: Gibt die Konfiguration mit der gegebenen ID zurück.
      operationId: getConfiguration
      responses:
        200:
          description: Die Konfiguration wird zurückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzerConfiguration'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    delete:
      tags:
        - config
      summary: Löscht eine Konfiguration.
      description: Löscht die gegebene Konfiguration aus der Datenbank. Wenn alle Konfigurationen gelöscht wurden, wird eine Default-Konfiguration verwendet.
      operationId: deleteConfiguration
      responses:
        204:
          description: Der Konfiguration wurde gelöscht.
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

    put:
      tags:
        - config
      summary: Aktualisiert eine bestehende Konfiguration.
      description: Aktualisiert die Konfiguration mit der gegebenen ID.
      requestBody:
        description: Die Konfiguration, die übernommen werden soll. Die ID sollte nicht angegeben werden und wird ansonsten ignoriert.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyzerConfiguration'
      operationId: updateConfiguration
      responses:
        200:
          description: Konfiguration wurde erfolgreich aktualisiert.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzerConfiguration'
        404:
          $ref: '#/components/responses/NotFoundError'
        400:
          description: Die übergebene Konfiguration ist ungültig.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerimoniaException'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/config/count:
    get:
      tags:
        - config
      summary: Gibt die Anzahl der Konfigurationen zurück.
      description: Gibt die Anzahl der in der Datenbank gespeicherten Konfigurationen zurück.
      operationId: countConfigurations
      responses:
        200:
          description: Konfigurationsanzahl wird zurückgegeben.
          content:
            text/plain:
              schema:
                type: integer
                format: int64
                minimum: 0
                example: 42
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/config/current:
    get:
      tags:
        - config
      summary: Gibt die aktuell aktive Konfiguration zurück.
      description: Gibt die Konfiguration zurück, die aktuell als Standard eingestellt ist.
      operationId: getCurrentConfiguration
      responses:
        200:
          description: Gibt die aktuell als Standard einsgestellte Konfiguration zurück.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzerConfiguration'
        500:
          $ref: '#/components/responses/UnexpectedError'

    put:
      tags:
        - config
      summary: Setzt die aktuell aktive Konfiguration.
      description: Setzt die aktuell aktive Konfiguration auf die Konfiguration mit der gegebenen ID.
      parameters:
        - $ref: '#/components/parameters/ConfigIdQueryParameter'
      operationId: updateCurrentConfiguration
      responses:
        200:
          description: Die Konfiguration mit der gegebenen ID wurde als aktive Konfiguration ausgewählt, diese wird zurück gegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzerConfiguration'
        404:
          $ref: '#/components/responses/NotFoundError'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/config/default:
    post:
      tags:
        - config
        - demo
      summary: Fügt Beispielkonfigurationen in die Datenbank ein.
      description: Fügt Beispielkonfigurationen in die Datenbank ein. Der erste Konfiguration wird **aktiviert**.
      operationId: addDefaultConfigurations
      responses:
        200:
          description: Erfolgreiches Einfügen der Beispielkonfigurationen. Gibt die Beispielkonfigurationen zurück.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnalyzerConfiguration'

  /api/config/all:
    delete:
      tags:
        - config
        - demo
      summary: Löscht alle Konfigurationen.
      description: Löscht alle Konfigurationen aus der Datenbank und setzt das System auf eine Default-Konfiguration zurück. Alle Referenzen in den Beschwerden werden gelöscht.
      operationId: deleteAllConfigurations
      responses:
        204:
          description: Löschen war erfolgreich.
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/config/allExtractors:
    get:
      tags:
        - config
      summary: Gibt alle KiKuKo-Extraktoren zurück.
      description: Gibt alle KiKuKo-Extraktoren gelistet nach Tool, Pipeline und Domain zurück.
      operationId: getAllExtractors
      responses:
        200:
          description: Gibt alle verfügbaren Extraktoren von KiKuKo zurück.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KiKuKoExtractors'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/stats/tagcloud:
    get:
      tags:
        - stats
      summary: Gibt die häufigsten Worte aus den Beschwerden zurück.
      description: Gibt eine Map zurück, die die häufigsten Wörter der Beschwerden und deren absoluten Häufigkeiten zurück. Hierbei werden Stopwörter heraus gefiltert. Über Parameter können die Beschwerden gefiltert werden, aus denen die häufigsten Worten analysiert werden.
      parameters:
        - name: count
          in: query
          description: Anzahl der häufigsten Wörter, die maximal zurückgegben werden sollen. Ohne Angabe werden alle zurückgegeben.
          required: false
          schema:
            type: integer
            format: int32
            example: 32
        - $ref: '#/components/parameters/DateMinParameter'
        - $ref: '#/components/parameters/DateMaxParameter'
        - $ref: '#/components/parameters/EmotionParameter'
        - $ref: '#/components/parameters/SubjectParameter'
        - name: words_only
          in: query
          required: false
          description: Falls true, werden alle Worte die nur aus Zahlen oder Sonderzeichen bestehen herausgefiltert.
          schema:
            type: boolean
            default: false
      operationId: getMostCommonWords
      responses:
        200:
          description: Die häufigsten Wörter und deren Häufigkeit werden zuückgegeben.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MostCommonWords'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/stats/categoriesStats:
    get:
      tags:
        - stats
      summary: Gibt Statistiken für jede vorkommende Kategorie zurück.
      description: Gibt eine Map zurück, die die Anzahl der Beschwerden, durchschnittliche Tendency, Emotion und die Aufteilung der Stati für jede Kategorie darstellt.
      parameters:
        - name: count
          in: query
          description: Anzahl der häufigsten Kategorien, die maximal zurückgegben werden sollen. Ohne Angabe werden alle zurückgegeben.
          required: false
          schema:
            type: integer
            format: int32
            example: 32
        - $ref: '#/components/parameters/DateMinParameter'
        - $ref: '#/components/parameters/DateMaxParameter'
        - $ref: '#/components/parameters/SubjectParameter'
      operationId: getCategorieStats
      responses:
        200:
          description: Die häufigsten Kategorien mit den jeweiligen Statistiken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesStats'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/stats/entitiesStats:
    get:
      tags:
        - stats
      summary: Gibt die häufigsten gefundenen Entitäten für jeden Entitätstyp zurück.
      description: Gibt eine Map zurück, der die häufigsten gefundenen Entitäten für jeden Entitätstyp darstellt.
      parameters:
        - name: count
          in: query
          description: Anzahl der häufigsten gefundenen Entitäten für jeden Entitätstyp, die maximal zurückgegben werden sollen. Ohne Angabe werden alle zurückgegeben.
          required: false
          schema:
            type: integer
            format: int32
            example: 32
        - $ref: '#/components/parameters/DateMinParameter'
        - $ref: '#/components/parameters/DateMaxParameter'
        - $ref: '#/components/parameters/SubjectParameter'
      operationId: getEntitieStats
      responses:
        200:
          description: Die häufigsten gefundenen Entitäten für jeden Entitätstyp.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesStats'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/stats/rulesStats:
    get:
      tags:
        - stats
      summary: Gibt die am häufigsten genutzten Regeln mit ihrer Verwendungsanzahl zurück.
      description: Gibt eine Map zurück, die die ID der Regel mit ihrer Verwendungsanzahl darstellt.
      parameters:
        - name: count
          in: query
          description: Anzahl der am häufigsten genutzten Regeln, die maximal zurückgegben werden sollen. Ohne Angabe werden alle zurückgegeben.
          required: false
          schema:
            type: integer
            format: int32
            example: 32
        - $ref: '#/components/parameters/DateMinParameter'
        - $ref: '#/components/parameters/DateMaxParameter'
        - $ref: '#/components/parameters/EmotionParameter'
        - $ref: '#/components/parameters/SubjectParameter'
      operationId: getRuleStats
      responses:
        200:
          description: Die am häufigsten genutzten Regeln mit ihrer Verwendungsanzahl.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RulesStats'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/stats/monthsStats:
    get:
      tags:
        - stats
      summary: Gibt Statistiken für jeden Monat zurück.
      description: Gibt eine Map zurück, die die Anzahl der Beschwerden und die Aufteilung der Stati für jeden Monat darstellt.
      parameters:
        - $ref: '#/components/parameters/DateMinParameter'
        - $ref: '#/components/parameters/DateMaxParameter'
        - $ref: '#/components/parameters/SubjectParameter'
      operationId: getMonthStats
      responses:
        200:
          description: Die Monate mit den jeweiligen Statistiken.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonthsStats'
        500:
          $ref: '#/components/responses/UnexpectedError'

  /api/reset:
    post:
      tags:
        - demo
      summary: Setzt das System auf einen Demo-Zustand zurück.
      description: >
        Es werden folgende Schritte durchgeführt:
        <ol>
          <li>Alle Beschwerden, Konfigurationen, Kombinationen, Antwortbausteine etc. werden gelöscht</li>
          <li>Die Beispielkonfigurationen, -bausteine, -kombinationen werden in die Datenbank geladen</li>
        </ol>
        Es werden noch keine Beschwerden in die Datenbank geladen.
        <p><b>Achtung!</b> Operation kann ein paar Minuten dauern.</p>
      operationId: reset
      responses:
        204:
          description: Reset erfolgreich
        500:
          $ref: '#/components/responses/UnexpectedError'

components:
  parameters:
    ComplaintIdParameter:
      name: complaintId
      in: path
      description: Die eindeutige ID einer Beschwerde.
      required: true
      schema:
        type: integer
        format: int64
        minimum: 1
        example: 1

    ComplaintStateParameter:
      name: state
      in: query
      required: false
      description: Gibt die Status an, in dem sich eine Beschwerde befindet. Ohne Angabe werden geschlossene Beschwerden nicht zurückgegeben.
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ComplaintState'
        default:
          - NEW
          - IN_PROGRESS

    ConfigIdParameter:
      name: configId
      in: path
      required: true
      description: Die eindeutige ID einer Konfiguration
      schema:
        type: integer
        format: int64
        minimum: 1

    CountParameter:
      name: count
      in: query
      description: Anzahl der Elemente, die zurück gegeben werden sollen. Falls nicht angegeben, werden alle Elemente zurückgegeben.
      required: false
      schema:
        type: integer
        format: int32
        minimum: 1

    PageParameter:
      name: page
      in: query
      description: Falls page 0 ist, werden die ersten *count* Elemente zurück gegeben, falls page 1 ist die zweiten *count* Elemente, gibt also die Seitenzahl an. Falls nicht angegeben, wird 0 angenommen. Wird ignoriert, falls *count* nicht gegeben ist.
      required: false
      schema:
        type: integer
        format: int32
        default: 0
        minimum: 0

    ComplaintsSortParameter:
      name: sort_by
      in: query
      required: false
      description: Hier können alle Kategorien angegeben werden, nach denen die Anfrage sortiert werden soll. Die Reihenfolge im Array bestimmt die Priorität beim Sortieren.
      schema:
        description: Ein Array von Kategorien, nach denen eine Anfrage sortiert werden soll. Zusätzlich wird angegeben, ob auf oder absteigend sortiert wird.
        type: array
        items:
          type: string
          description: Gibt an, nach was die Beschwerden sortiert werden sollen.
          enum:
            - id_asc
            - id_desc
            - state_asc
            - state_desc
            - upload_date_asc
            - upload_date_desc
            - subject_asc
            - subject_desc
            - sentiment_asc
            - sentiment_desc
            - emotion_asc
            - emotion_desc
        default: ["state_asc", "upload_date_desc"]

    DateMinParameter:
      name: date_min
      in: query
      required: false
      description: Bei Angabe werden nur Beschwerden ausgewertet, die nach diesem Datum hochgeladen wurden. Datum muss [RFC3339 5.6](https://tools.ietf.org/html/rfc3339#section-5.6) enstprechen, also dem Format yyyy-mm-dd.
      schema:
        type: string
        format: date
        example: "2019-03-29"

    DateMaxParameter:
      name: date_max
      in: query
      required: false
      description: Bei Angabe werden nur Beschwerden ausgewertet, die vor diesem Datum hochgeladen wurden. Das Datum entpricht dem gleichen Format wie bei *dateMin*
      schema:
        type: string
        format: date
        example: "2020-07-23"

    EmotionParameter:
      name: emotion
      in: query
      required: false
      description: Bei Angabe werden nur Beschwerden ausgewertet, die einem der gegebenen Emotionen entsprechen.
      schema:
        type: array
        items:
          type: string
        example:
          - "Wut"
          - "Trauer"
          - "Ueberraschung"
          - "Freude"
          - "Ekel"
          - "Furcht"
          - "Verachtung"

    SubjectParameter:
      name: subject
      in: query
      required: false
      description: Bei Angabe werden nur Beschwerden ausgewertet, die einem der gegebenen Kategorien von Beschwerden entsprechen.
      schema:
        type: array
        items:
          type: string
        example:
          - "Fahrt nicht erfolgt"
          - "Fahrer unfreundlich"
          - "Sonstiges"

    KeywordsParameter:
      name: keywords
      in: query
      required: false
      description: Bei Angabe werden nur Elemente ausgewertet, die die angebenen Schlüsselwörter enthalten.
      schema:
        type: array
        items:
          type: string

    ActionCode:
      name: action_code
      in: query
      required: false
      description: Eine Bezeichung, die den Typ der Aktion angibt.
      schema:
        type: string
        enum:
          - SEND_MAIL
          - ATTACH_VOUCHER

    ConfigIdQueryParameter:
      name: configId
      in: query
      description: Falls dieser Wert gegeben wird, wird die Beschwerde mit der gegebenen Konfiguration analysiert. Ansonsten wird die aktuell ausgewählte Konfiguration zur Analyse verwendet.
      required: false
      schema:
        type: integer
        format: int64
        minimum: 1

  schemas:
    Complaint:
      required:
        - state
        - preview
        - receiveDate
        - receiveTime
        - properties
        - emotion
        - sentiment
      type: object
      description: Diese Datenstuktur modelliert eine Beschwerde (oder eine eingegangen Meldung von anderer Art). Eine Beschwerde besitzt eine eindeutige ID, einen Zustand (in Bearbeitung, geschlossen), den Meldetext, Eingangsdatum, sowie weitere Eigenschaften wie Sentiment und Kategorie. Weiterhin ist zu jeder Beschwerde gespeichert mit welcher Konfigutartion sie analysiert wurde.
      properties:
        id:
          type: integer
          format: int64
          minimum: 1
          example: 1
          description: Die eindeutige ID der Beschwerde.
          readOnly: true
        preview:
          type: string
          description: Die ersten zwei Zeilen der Beschwerde.
          example: "Guten Tag,\nMein Bus kam heute viel zu spät!"
          readOnly: true
        state:
          $ref: '#/components/schemas/ComplaintState'
        configuration:
          $ref: '#/components/schemas/AnalyzerConfiguration'
        receiveDate:
          type: string
          format: date
          description: Das Eingangsdatum der Beschwerde im Format yyyy-mm-dd.
          example: "2019-05-02"
          readOnly: true
        receiveTime:
          type: string
          description: Die Eingangszeit der Beschwerde im System im Format hh:mm:ss
          example: "13:45:00"
          readOnly: true
        properties:
          type: array
          description: Die Ergebnisse der Klassifikatoren, zum Beispiel für die Kategorie der Beschwerde.
          items:
            $ref: '#/components/schemas/ComplaintProperty'
        sentiment:
          type: object
          description: Enthält die Ergbnisse der Sentiment-Analyse.
          properties:
            tendency:
              type: number
              description: Der Wert des Sentiments. Positive Werte bedeuten positives Sentiment, negative Werte bedeuten negatives Sentiment.
              example: 0.4
            emotion:
              $ref: '#/components/schemas/ComplaintProperty'
      example:
        id: 269
        preview: Sehr geehrte Damen und Herren, am heutigen Tag wollte ich die Linie 647
          um 8.20 Uhr von Hattingen in Richtung Wuppertal nutzen. Als ich um 8.15 Uhr am
          Busbahnhof ankam, informierten mich weitere Fahrgäste, dass der Bus um 7.40 Uhr
          bereits ausgefallen
        state: NEW
        configuration:
          id: 94
          name: Kein Sentiment
          extractors:
            - name: 'Linien Extraktor'
              type: KIKUKO_TOOL
              label: Linie
              color: '#aff4fa'
            - name: '[Extern] Geldbetrag'
              type: KIKUKO_TOOL
              label: Geldbetrag
              color: '#f5ff8a'
            - name: 'Vorgangsnummer'
              type: KIKUKO_TOOL
              label: Vorgangsnummer
              color: '#ffaeae'
            - name: '[Regex] Datums Extraktion 2'
              type: KIKUKO_TOOL
              label: Datum
              color: '#c7c7c7'
            - name: '[Extern] Person'
              type: KIKUKO_TOOL
              label: Name
              color: '#ffaeae'
            - name: '[Extern] Telefonnummer'
              type: KIKUKO_TOOL
              label: Telefonnummer
              color: '#acc2b9'
            - name: '[Fuzzy] Haltestellen'
              type: KIKUKO_TOOL
              label: Haltestelle
              color: '#408080'
            - name: '[Fuzzy] Ortsnamen'
              type: KIKUKO_TOOL
              label: Ort
              color: '#cdfa8f'
          classifiers:
            - type: KIKUKO_CLASSIFIER
              name: Beschwerde3Klassifikator2
              propertyName: Kategorie
          sentimentAnalyzer:
            type: NONE
            name: NONE
          emotionAnalyzer:
            type: NONE
            name: NONE
          active: false
        receiveDate: '2019-08-04'
        receiveTime: '16:14:41'
        sentiment:
          emotion:
            value: Trauer
            name: Emotion
            probabilities:
              Verachtung: 23.53
              Trauer: 76.47
            setByUser: false
          tendency: 0.4
        properties:
          - value: Fahrt nicht erfolgt
            name: Kategorie
            probabilities:
              Fahrt nicht erfolgt: 0.6
              Sonstiges: 0.3
              Fahrer unfreundlich: 0
            setByUser: false

    ComplaintProperty:
      type: object
      description: Eine Eigenschaft für Beschwerden, zum Beispiel für Kategorie und Sentiment. Enhält einen Bezeichner, Wahrscheinlichkeiten für Werte und ein Flag, ob der Wert vom Nutzer gesetzt wurde.
      required:
        - name
        - value
        - probabilities
        - setByUser
      properties:
        name:
          type: string
          example: 'Kategorie'
          description: Name der Eigenschaft
        value:
          type: string
          example: 'Fahrt nicht erfolgt'
          description: Die Wert der Eigenschaft.
        setByUser:
          type: boolean
          example: false
          description: Ob der Parameter vom Nutzer gesetzt wurde oder automatisch erkannt wurde.
        probabilities:
          type: object
          description: Gibt die Wahrscheinlichkeiten für alle Kategorien an, dass die Beschwerde eine bestimmte Kategorie / ein bestimmtes Sentiment hat.
          additionalProperties:
            type: number
          example:
            "Fahrt nicht erfolgt": 0.6
            "Fahrer unfreundlich": 0.3
            "Sontiges": 0.1

    ComplaintState:
      type: string
      description: >
        Eine Beschwerde kann einer der folgenden Zustände besitzen:
        <ul>
        <li><code>ERROR</code>: Beschwerde ist im Fehlerzustand. Sie kann neu analysiert oder gelöscht werden, aber nicht bearbeitet. </li>
        <li><code>ANALYSING</code>: Beschwerde wird momentan analysiert. Die Beschwerde kann nicht bearbeitet werden. Sie kann gelöscht werden, was allerdings nur dann getan werden sollte, wenn aufgrund eines Fehlers die Beschwerde dauerhaft in diesem Zustand ist (z.B. durch unerwartetes Beenden des Servers)</li>
        <li><code>NEW</code>: Die Beschwerde wurde erfolgreich analysiert, die Bearbeitung wurde noch nicht begonnen. Die Beschwerde kann beliebig verändert und gelöscht werden.</li>
        <li><code>IN_PROGRESS</code>: Eine Beschwerde muss manuell auf diesen Zustand gesetzt werden. Die Bearbeitung mit der Beschwerde wurde begonnen und sie kann beliebig verändert und gelöscht werden.</li>
        <li><code>CLOSED</code>: Die Beschwerde wurde geschlossen und kann nicht mehr bearbeitet, nur noch gelöscht werden.</li>
        </ul>
      enum: [ERROR, ANALYSING, NEW, IN_PROGRESS, CLOSED]
      example: "NEW"

    ComplaintUpdateRequest:
      description: Ein Objekt mit optionalen Feldern, welches zum Aktualisieren von Beschwerden verwendet wird.
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ComplaintState'
        subject:
          type: string
          description: Die Kategorie der Beschwerde, die übernommen werden soll.
          example: "Fahrer unfreundlich"
        emotion:
          type: string
          description: Die Emotion der Beschwerde, die übernommen werden soll.
          example: "Freunde"

    NamedEntity:
      description: Beschreibt den Anfangs- und Endindex einer *Named-Entity* einer bestimmten Kategorie. Außerdem ist angeben. ob die Entität von einem Nutzer gesetzt wurde und mit welcher Farbe die Entität angezeit werden soll. Dieser wird nicht angepasst, wenn sich die Extraktoren-Einstellungen ändern! Der gegebene Farbwert, sollte also nur als Fallback verwendet werden.
      type: object
      required:
        - label
        - start
        - end
        - value
        - preferred
        - color
      properties:
        id:
          type: integer
          description: Eine eindeutige ID der Named Entity.
          minimum: 1
          example: 1
          readOnly: true
        label:
          type: string
          description: Die Kategorie der Entität.
          example: 'Datum'
        start:
          type: integer
          format: int64
          description: Der Index des Zeichens im Text, mit dem die Named Entity beginnt.
          example: 24
        end:
          type: integer
          format: int64
          description: Der Index des Zeichens im Text, ab dem der Text *nicht* mehr diese Named Entity ist.
          example: 29
        value:
          type: string
          description: Der Text der Entität, ggf. korrigiert.
          example: '23. Januar 2001'
        setByUser:
          type: boolean
          description: Gibt an, ob eine Entität vom Nutzer gesetzt wurde (true) oder vom System marktiert wurde (false).
          example: false
          readOnly: true
        preferred:
          type: boolean
          description: Gibt an, ob der Nutzer die Entität als bevorzugt markiert hat.
          example: false
        extractor:
          type: string
          description: Der Name des Extraktors, der für die Analyse benutzt wurde.
          example: "QuerimoniaExtract"
        color:
          type: string
          description: Die Farbe, mit der die Entität angezeigt werden soll. Dieser Wert wird nicht aktualisiert bei Konfigurationsänderungen. Daher sollte dieser Wert als nur Fallback verwendet werden.
          example: '#9829DD'
      example:
        id: 593
        label: Linie
        start: 617
        end: 621
        value: CE62
        setByUser: false
        preferred: true
        extractor: QuerimoniaExtract
        color: "#aff4fa"

    AnalyzerConfiguration:
      description: In der Konfiguration ist festgelegt, welche Extraktoren, welcher Klassifikator und Sentiment-Analysierer verwerdet wird.
      type: object
      required:
        - extractors
        - classifiers
        - sentimentAnalyzer
      nullable: true
      properties:
        id:
          type: integer
          format: int64
          description: Eindeutige ID der Konfiguration.
          minimum: 1
          example: 1
          readOnly: true
        name:
          type: string
          description: Ein Name zur Identifikation und besseren Unterscheidung für den Nutzer. Muss **eindeutig** sein.
          example: "Default-Konfiguration"
        extractors:
          type: array
          items:
            $ref: '#/components/schemas/Extractor'
        classifiers:
          type: array
          items:
            $ref: '#/components/schemas/Classifier'
        sentimentAnalyzer:
          $ref: '#/components/schemas/SentimentAnalyzer'
        emotionAnalyzer:
          $ref: '#/components/schemas/EmotionAnalyzer'
        active:
          type: boolean
          description: Gibt an, ob die Konfiguration aktiv ist.
          example: false
          readOnly: true

    KiKuKoExtractors:
      description: Alle verfügbaren Extraktoren sind aufgelistet.
      type: object
      properties:
        tool:
          type: array
          items:
            type: string
          example:
            - "2706 Geldbetrag Extraktor"
            - "Beschwerde3Klassifikator"
            - "[Extern] Date & Time"
            - "[Fuzzy] Haltestellen"
            - "[ML] Anliegen Klassifikator"
            - "[Regex] Bahn Klassifikator"

        pipeline:
          type: array
          items:
            type: string
          example:
            - "2706 Datum [Klassifikation]"
            - "Beschwerde3Klassifikator"
            - "[Extern]  Orte"
            - "[Fuzzy] Haltestellen"
            - "[ML] Datum Klassifikationr"
            - "[Regex] Datum Klassifikator"

        domain:
          type: array
          items:
            type: string
          example:
            - '2706 Buchhaltung'
            - 'Beschwerde'
            - 'QuerimoniaExtract'

    Classifier:
      description: Ein Klassifizierer bestimmt die Kategorie (Subject) einer Beschwerde.
      type: object
      required:
        - name
        - propertyName
        - type
      properties:
        name:
          description: Der Name des Klassifizierers. Bei KIKuKo-Klassifizieren muss in KIKuKu ein Klassifizierer mit diesem Namen existieren.
          example: 'Beschwerde3Klassifikator2'
          type: string
        propertyName:
          description: Die Art von Eigenschaft, die vom Klassifizierer analysiert wird.
          example: 'Kategorie'
          type: string
        type:
          type: string
          enum:
            - KIKUKO_CLASSIFIER
            - NONE
          description: Gibt den Typ des Klassifizieres an.
          example: 'KIKUKO_CLASSIFIER'

    EmotionAnalyzer:
      description: Dient zur Analyser der Emotion.
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Der Name des Analysierers.
          example: "QuerimoniaEmotion"
          type: string
        type:
          description: Der Typ des Analysierers.
          example: "QUERIMONIA_EMOTION"
          type: string
          enum:
            - "QUERIMONIA_EMOTION"
            - "NONE"

    SentimentAnalyzer:
      description: Dient zur Analyse des Sentiments einer Beschwerde. (Nur die Tendenz)
      type: object
      required:
        - name
        - type
      properties:
        name:
          description: Der Name des Analysierers.
          example: 'QuerimoniaSentiment'
          type: string
        type:
          type: string
          enum:
            - QUERIMONIA_SENTIMENT
            - NONE
          description: Gibt den Typ des Klassifizieres an.
          example: 'QUERIMONIA_SENTIMENT'

    Extractor:
      description: Ein Extraktor hat einen **eindeutigen** Namen, einen Typ und eine zugeordnete Farbe für jede Entity für die Anzeige im Frontend.
      type: object
      required:
        - name
        - type
        - label
        - color
      properties:
        name:
          type: string
          description: Der Name des Extraktors. Bei KIKuKo Extraktoren muss ein Extraktor mit diesem Namen konfiguriert sein.
          example: "QuerimoniaExtract"
        type:
          type: string
          enum:
            - KIKUKO_TOOL
            - NONE
          description: Eine Bezeichner für den Typ von Entraktor. KIkukoTool wird für Tools von KIkuko verwendet.
          example: "KIKUKO_TOOL"
        label:
          type: string
          description: Der Typ der Entität
          example: 'Name'
        color:
          type: string
          example: '#934030'
          description: Farbwert, der extrahierten Entitäten

    LogItem:
      description: Ein Eintrag im Log zu einer Beschwerde.
      type: object
      required:
        - date
        - time
        - message
        - category
      properties:
        category:
          description: Die Kategorie des Log-Eintrags
          type: string
          enum:
            - ANALYSIS
            - GENERAL
            - ERROR
          example: 'ANALYSIS'
        message:
          description: Der Text des Log-Eintrags
          type: string
          example: "Sentiment-Analyse abgeschlossen"
        date:
          description: Das Datum des Log-Eintrags
          type: string
          format: date
          example: "2019-07-01"
        time:
          description: Die Uhrzeit des Log-Eintrags
          type: string
          format: date-time
          example: "12:03:19"

    ResponseComponent:
      description: Ein generischer Antwortbaustein. Dieser besteht aus möglicherweise mehereren Alternativtexten, die Platzhalter enthalten können, sowie einer Regelbeschreibung, die angibt, wann der Baustein verwendet werden kann.
      type: object
      required:
        - priority
        - componentName
        - componentTexts
        - actions
        - rulesXml
      properties:
        id:
          type: integer
          format: int64
          description: Die eindeutige ID des Antwortbausteins.
          minimum: 1
          example: 1
          readOnly: true
        priority:
          type: integer
          format: int64
          example: 100
          description: Eine Zahl, die die Priorität bei der Antwortgenerierung angibt. Bausteine mit hoher Priorität werden zuerst geprüft und ggf. verwendet.
        name:
          type: string
          description: Eine **eindeutige** Bezeichung, welchen Teil einer Antwort der Baustein widerspiegelt.
          example: 'Begrüßung'
        texts:
          type: array
          description: Die Textalternativen ggf. mit Platzhaltern, die in der Antwort verwendet werden können
          items:
            type: string
            description: Bausteintext mit Platzhaltern.
            example: "Sehr geehrter Herr ${Name},"
        actions:
          type: array
          description: Alle Aktionen, die mit bei Erfüllung der Regeln ausgeführt werden sollen.
          items:
            $ref: '#/components/schemas/Action'
        rulesXml:
          type: string
          description: XML-Beschreibung der Regeln, die beschreiben, wann ein Antwortbaustein verwendet werden darf. Muss dem XSD-Schema entsprechen.
          example: "<Rules><Property name=\"Kategorie\" value=\"Fahrt nicht erfolgt\"/></Rules>"
        requiredEntities:
          type: array
          description: Die nötigen Entitäts-Typen für den Antwortbaustein.
          items:
            type: string
            example: "Name"
            description: Eine Entity, die für den Antwortbaustein vorhanden sein muss. Muss **nicht** beim Posten eines Bausteins angegeben werden.
          readOnly: true

    CompletedResponsePart:
      description: Ein Teil der Anwort mit Antworttextalternativen und den zugehörigen Entitäten.
      type: object
      required:
        - component
        - entities
      properties:
        entities:
          type: array
          description: Alle Entitäten, die in diesem Baustein verwendet werden können.
          items:
            $ref: '#/components/schemas/NamedEntity'
        component:
          $ref: '#/components/schemas/ResponseComponent'

    ResponseSuggestion:
      description: Vollständiger Antwortvorschlag, bestehend aus ausgefüllten Text-Komponenten und Aktionen.
      type: object
      required:
        - components
        - actions
      properties:
        components:
          type: array
          items:
            $ref: '#/components/schemas/CompletedResponsePart'
          description: Eine Liste an Antwortbausteinen, deren Reihenfolge der Reihenfolge entspricht, wie sie im Gesamten einen sinnvollen Text ergeben.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
          description: Die Aktionen, die bei Abschluss der Beschwerde ausgeführt werden sollen.
      example:
        components:
          - id: 645
            component:
              id: 97
              name: BegrüßungMitName
              priority: 100
              rulesXml: '<Rules><And><PredecessorCount max="0"/><EntityAvailable label="Name"/></And></Rules>'
              requiredEntities:
                - Name
              texts:
                - 'Sehr geehrter Herr/Frau ${Name},\n'
                - 'Liebe/Lieber Frau/Herr ${Name},\n'
                - 'Guten Tag, Frau/Herr ${Name},\n'
              actions: []
            entities:
              - id: 590
                label: Name
                start: 83
                end: 92
                value: Wuppertal
                setByUser: false
                preferred: false
                extractor: QuerimoniaExtract
                color: "#ffd666"
              - id: 591
                label: Name
                start: 108
                end: 117
                value: Wuppertal
                setByUser: false
                preferred: false
                extractor: QuerimoniaExtract
                color: "#ffd666"
              - id: 603
                label: Name
                start: 1440
                end: 1449
                value: Wuppertal
                setByUser: false
                preferred: false
                extractor: QuerimoniaExtract
                color: "#ffd666"
              - id: 631
                label: Name
                start: 2401
                end: 2410
                value: Wuppertal
                setByUser: false
                preferred: false
                extractor: QuerimoniaExtract
                color: "#ffd666"
              - id: 633
                label: Name
                start: 2411
                end: 2414
                value: Hbf
                setByUser: false
                preferred: false
                extractor: QuerimoniaExtract
                color: "#ffd666"
          - id: 646
            component:
              id: 99
              name: EingangsdatumMitDatum
              priority: 100
              rulesXml: <Rules><And><Predecessor matches="Begrüßung.*" position="last"/><EntityAvailable label="Eingangsdatum"/></And></Rules>
              requiredEntities:
                - Eingangsdatum
              texts:
                - 'vielen Dank für Ihre Beschwerde, die am ${Eingangsdatum} bei uns im System eingegangen ist.'
                - 'vielen Dank für Ihre Beschwerde, die wir am ${Eingangsdatum} erhalten haben.'
                - 'vielen Dank für Ihre Beschwerde, die Sie am ${Eingangsdatum} bei uns eingereicht haben.'
              actions: []
            entities:
              - id: 647
                label: Eingangsdatum
                start: 0
                end: 0
                value: 5. August 2019
                setByUser: false
                preferred: false
                extractor: QuerimoniaExtract
                color: "#e9bdf0"
        actions: []

    Action:
      description: Eine Aktion kann automatisch beim Abschluss einer Beschwerde ausgelöst werden, wenn bestimmt Regeln dafür erfüllt sind. Zum Beispiel können E-Mails versendet werden, Gutscheine als Attachment angehängt werden, Beschwerden weitergeleitet werden etc.
      type: object
      required:
        - name
        - actionCode
        - rulesXml
        - parameters
      properties:
        name:
          description: Ein eindeutiger Bezeichnert für die Aktion.
          type: string
          example: "GutscheinFreifahrt"
        actionCode:
          $ref: '#/components/schemas/ActionCode'
        parameters:
          description: Zusätzliche Parameter für die Aktion, zum Beispiel an wen eine E-Mail gesendet wird oder den Wert des Gutscheins.
          type: object
          additionalProperties:
            type: string
          example:
            "E-Mail": "beispiel@gmail.com"
            "Text": "Beispieltext"
            "Gutscheinwert": "5"

    ActionCode:
      description: Eine Bezeichung, die den Typ der Aktion angibt.
      type: string
      enum:
        - SEND_MAIL
        - ATTACH_VOUCHER
      example: "ATTACH_VOUCHER"

    MostCommonWords:
      description: Enthält die häufigsten Wörter aus den Beschwerden
      type: object
      additionalProperties:
        type: integer
        format: int64
      example:
        "Fahrer": 32
        "Bus": 29
        "fahren": 24

    CategoriesStats:
      description: Enthält die häufigsten Kategorien mit den jeweiligen Statistiken
      type: object
      properties:
        Sonstiges:
          $ref: '#/components/schemas/CategoryStats'
        Fahrt nicht erfolgt:
          $ref: '#/components/schemas/CategoryStats'
        Fahrer unfreundlich:
          $ref: '#/components/schemas/CategoryStats'

    CategoryStats:
      description: Enthält die Statistiken zu einer Kategorie
      type: object
      properties:
        count:
          description: Emotionen mit ihren Häufigkeiten.
          type: object
          additionalProperties:
            type: integer
            format: int64
          example:
            32
        tendency:
          description: Emotionen mit ihren Häufigkeiten.
          type: object
          additionalProperties:
            type: integer
            format: int64
          example:
            -0.42
        emotion:
          description: Emotionen mit ihren Häufigkeiten.
          type: object
          additionalProperties:
            type: integer
            format: int64
          example:
            "Freude": 0.5
            "Trauer": 0.2
            "Ueberraschung": 0.3
        status:
          description: Stati mit ihren Häufigkeiten.
          type: object
          example:
            "ERROR": 0.1
            "ANALYSING": 0.1
            "NEW": 0.3
            "IN_PROGRESS": 0.1
            "CLOSED": 0.4

    EntitiesStats:
      description: Enthält die Entitätstypen mit den häufigsten vorkommenden Werten
      type: object
      properties:
        Linie:
          $ref: '#/components/schemas/EntityStats'
        Haltestelle:
          $ref: '#/components/schemas/EntityStats'
        Geldbetrag:
          $ref: '#/components/schemas/EntityStats'

    EntityStats:
      description: Enthält die Anzahl der Vorkommen von Entitäten zu einem Entitätstyp
      type: object
      example:
        "CE62": 8
        "3.15€": 2

    RulesStats:
      description: Enthält die am häufigsten verwendeten Regeln (ID) mit der jeweiligen Anzahl
      type: object
      additionalProperties:
        type: integer
        format: int64
      example:
        "312": 14
        "253": 6
        "123": 2

    MonthsStats:
      description: Enthält Monate mit den jeweiligen Statistiken
      type: object
      properties:
        2019-6:
          $ref: '#/components/schemas/MonthStats'
        2019-7:
          $ref: '#/components/schemas/MonthStats'
        2019-8:
          $ref: '#/components/schemas/MonthStats'

    MonthStats:
      description: Enthält die Statistiken zu einem Monat
      type: object
      properties:
        count:
          description: Emotionen mit ihren Häufigkeiten.
          type: object
          example:
            32
        status:
          description: Stati mit ihren Häufigkeiten.
          type: object
          example:
            "ERROR": 0.1
            "ANALYSING": 0.1
            "NEW": 0.3
            "IN_PROGRESS": 0.1
            "CLOSED": 0.4
        processingDuration:
          description: Durchschnittliche Bearbeitungszeit in Stunden von den CLOSED Beschwerden
          type: object
          example: 10


    QuerimoniaException:
      description: Rückgabetyp im Fehlerfall.
      type: object
      required:
        - timestamp
        - status
        - message
        - title
      properties:
        timestamp:
          description: Der genaue Zeitpunkt, wann der Fehler aufgetreten ist.
          type: string
          example: '2019-07-04T15:24:23.3942221'
        status:
          description: Der HTTP-Status Code, der zuückgegeben wird.
          type: integer
          format: int64
          example: 500
        message:
          description: Die Beschreibung des Fehlers auf Deutsch
          type: string
          example: 'Die Beschwerde konnte nicht gespeichert werden!'
        title:
          description: Kurze Fehlerbeschreibung, Titel für Fehlerdialog
          type: string
          example: 'Fehler beim Speichern'
        exception:
          description: Falls verfügbar, der Name der Java-Exception, die beim Fehler geworfen wurde.
          type: string
          example: "IOException"

    XmlException:
      description: Ein Xml-Parse-Fehler
      type: object
      allOf:
        - $ref: '#/components/schemas/QuerimoniaException'
      properties:
        line:
          type: integer
          format: int32
          example: 1
          minimum: 1
          description: Die Liniennummer des Fehlers, beginnend bei 1
        column:
          type: integer
          format: int32
          example: 0
          minimum: 0
          description: Der Zeichenindex des Fehlers, beginnend bei 0.

    LineStopCombination:
      description: Eine Kombination aus Linie, Haltestelle und Ort.
      type: object
      properties:
        Linie:
          type: string
          example: "293"
          nullable: true
          description: Linienbezeichnung
        Haltestelle:
          description: Haltestellenbezeichnun
          type: string
          nullable: true
          example: "Kirchplatz"
        Ort:
          description: Ortsname
          type: string
          example: "Wuppertal"
          nullable: true

    EntityArray:
      description: Array aus Named Entities
      type: array
      items:
        $ref: '#/components/schemas/NamedEntity'
      example:
        - id: 589
          label: Linie
          start: 74
          end: 78
          value: CE62
          setByUser: false
          preferred: false
          extractor: QuerimoniaExtract
          color: "#aff4fa"
        - id: 592
          label: Linie
          start: 612
          end: 616
          value: CE61
          setByUser: false
          preferred: false
          extractor: QuerimoniaExtract
          color: "#aff4fa"
        - id: 593
          label: Linie
          start: 617
          end: 621
          value: CE62
          setByUser: false
          preferred: true
          extractor: QuerimoniaExtract
          color: "#aff4fa"

  responses:
    UnexpectedError:
      description: Unerwarteter Serverfehler
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuerimoniaException'

    NotFoundError:
      description: Auf dem Server existiert kein Element mit der übergebenen ID.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuerimoniaException'
          example:
            timestamp: '2019-07-04T15:24:23.3942221'
            status: 404
            message: 'Ein Element mit der gegebenen ID existiert nicht!'
            title: 'Fehlendes Element'
            exception: 'NotFoundException'

    IllegalParametersError:
      description: Die übergebenen Parameter sind ungültig, zum Beispiel vom falschen Datentyp.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/QuerimoniaException'

  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

security:
  - basicAuth: [
  ]